name: .NET Framework Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
    
    - name: Restore NuGet packages
      run: nuget restore NEO_ACT_Plugin.sln

    - name: Check Solution Configuration
      shell: powershell
      run: |
        $slnFile = "NEO_ACT_Plugin.sln"
        Write-Host "Checking available configurations in $slnFile"
        
        $content = Get-Content $slnFile -Raw
        if ($content -match "GlobalSection\(SolutionConfigurationPlatforms\)(.*?)EndGlobalSection") {
            $configSection = $matches[1]
            Write-Host "Available solution configurations:"
            $configSection -split "`n" | ForEach-Object { 
                $line = $_.Trim()
                if ($line -ne "") {
                    Write-Host "  $line" 
                }
            }
        } else {
            Write-Host "Could not find configuration section in solution file."
        }
    
    - name: Download and Extract ACT
      shell: powershell
      run: |
        $url = "https://advancedcombattracker.com/download.php?id=57"
        $outputPath = "$env:TEMP\ACT.zip"
        
        Invoke-WebRequest -Uri $url -OutFile $outputPath
        $actTargetDir = "C:\Program Files (x86)\Advanced Combat Tracker"
        if (-not (Test-Path $actTargetDir)) {
            New-Item -ItemType Directory -Path $actTargetDir -Force
        }
        
        Expand-Archive -Path $outputPath -DestinationPath $actTargetDir -Force
        
        Get-ChildItem -Path $actTargetDir
        
        if (-not (Test-Path "$actTargetDir\Advanced Combat Tracker.exe")) {
            Write-Error "Advanced Combat Tracker.exe not found at $actTargetDir\Advanced Combat Tracker.exe"
            exit 1
        }
    
    - name: Build solution
      run: msbuild /p:Configuration=Release "/p:Platform=Any CPU" NEO_ACT_Plugin.sln
    
    - name: Run tests
      shell: powershell
      run: |
        Write-Host "Looking for output directories..."
        $potentialDirs = @(
            ".\bin\Release",
            ".\NEO_ACT_Plugin\bin\Release",
            ".\bin\Any CPU\Release",
            ".\NEO_ACT_Plugin\bin\Any CPU\Release"
        )
        
        $testDll = $null
        
        foreach ($dir in $potentialDirs) {
            if (Test-Path $dir) {
                Write-Host "Found directory: $dir"
                Get-ChildItem -Path $dir -Recurse | ForEach-Object {
                    Write-Host "  $($_.FullName)"
                }
                
                if (Test-Path "$dir\NEO_ACT_Plugin.dll") {
                    $testDll = "$dir\NEO_ACT_Plugin.dll"
                    Write-Host "Found test DLL: $testDll"
                    break
                }
            }
        }
        
        if ($testDll) {
            Write-Host "Running tests on $testDll"
            
            if (Test-Path "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\Extensions\TestPlatform\vstest.console.exe") {
                & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\Extensions\TestPlatform\vstest.console.exe" $testDll
            } elseif (Test-Path "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\Extensions\TestPlatform\vstest.console.exe") {
                & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\Extensions\TestPlatform\vstest.console.exe" $testDll
            } else {
                Write-Host "VSTest not found. Install it or use another test runner."
            }
        } else {
            Write-Host "Test DLL not found in common locations. Skipping tests."
        }